version: 2.0
jobs:
  build:
    docker:
        - image: &img burgerdev/ocaml-addressmapper-devel:alpine
    working_directory: /tmp/oam
    steps:
      - checkout
      - run:
          name: "Build"
          command: |
            export TERM=dumb
            eval `opam config env`
            make build
      - run:
          name: "Test"
          command: |
            export TERM=dumb
            eval `opam config env`
            make test
      - store_artifacts:
          path: /tmp/oam/_build/src/main.native
          destination: main.alpine
      - add_ssh_keys:
          fingerprints:
            - "fa:c2:d1:06:3d:cf:db:e6:b7:5a:2b:ac:9b:40:81:11"
      - setup_remote_docker
      - run:
          name: "Integration Test"
          command: |
              /bin/sh -x ./docker-build.sh "alpine" "it"
      - deploy:
          name: "Push to Branch"
          command: |
              version="$(git describe --abbrev=0 --tags)"
              if [[ "heads/$version" != "${CIRCLE_BRANCH}" && "master" != "${CIRCLE_BRANCH}" ]]
              then
                  echo "not deploying to '$version' from '${CIRCLE_BRANCH}'"
                  exit 0
              fi
              url="https://${CIRCLE_BUILD_NUM}-87226222-gh.circle-artifacts.com/0/main.alpine"
              tmp=$(mktemp)
              cat .circleci/images/ocaml-addressmapper/Dockerfile.alpine.template | \
                  sed -e "s|URL|$url|" -e "s|HASH|$(git rev-parse --short HEAD)|" >$tmp
              if [[ "master" == "${CIRCLE_BRANCH}" ]]
              then
                  b="alpine"
              else
                  b="$version-alpine"
              fi
              git checkout -f -B $b
              mv $tmp Dockerfile
              git add Dockerfile
              git commit -m "automatic commit triggered by CircleCI build https://circleci.com/gh/burgerdev/ocaml-addressmapper/${CIRCLE_BUILD_NUM}"
              git push -f origin $b
  build_ubuntu:
    docker:
        - image: *img
    working_directory: /tmp/oam
    steps:
      - checkout
      - run:
          name: "Build"
          command: |
            export TERM=dumb
            eval `opam config env`
            make build
      - run:
          name: "Test"
          command: |
            export TERM=dumb
            eval `opam config env`
            make test
      - store_artifacts:
          path: /tmp/oam/_build/src/main.native
          destination: main.ubuntu
workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - build_ubuntu
